[user]
  email = kevin@rockwood.me
  name = Kevin Rockwood

[alias]
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --color --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue) %an %Creset' --abbrev-commit
  # View the current working tree status using the short format
  st = status -sb
  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
  # Commit all changes
  ca = !git add -A && git commit -av
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  br = branch
  brs = branch -a
  co = checkout
  remotes = remote -v
  # Interactive rebase with the given number of latest commits
  reb = "!r() { git rebase -i HEAD~$1; }; r"
  # Delete all merged branches
  clean-branches = "!git branch --merged | grep -v '\\*\\|master' | xargs -n 1 git branch -d"

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  editor = vim

[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true

[push]
  default = simple

[pull]
  rebase = true

[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
